version: '3.8'

services:

  db:
    image: "postgres:13"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env-db-local
    ports:
      - "5433:5432"

  redis:
    image: redis:6-alpine

  api:
    build: .
    image: api
    container_name: api
    ports:
      - "5000:5000"
    command: python app.py run -h 0.0.0.0
    volumes:
      - .:/usr/src/app
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=app.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env-db-local
    depends_on:
      - redis

  worker:
    build: .
    command: celery --app app.server.tasks.celery worker --loglevel=info -f /tmp/celery.logs
    volumes:
      - .:/usr/src/app
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=app.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - api
      - redis

  dashboard:
    build: .
    command: celery --app app.server.tasks.celery flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=app.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - api
      - redis
      - worker

#  kafka:
#    image: bitnami/kafka:latest
#    container_name: kafka
#    environment:
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#
#  zookeeper:
#    image: bitnami/zookeeper:latest
#    container_name: zookeeper
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    ports:
#      - "2181:2181"
#
#  mosquitto:
#    image: eclipse-mosquitto:latest
#    container_name: mqtt-broker
#    ports:
#      - "1883:1883"  # MQTT Port
#      - "9001:9001"  # WebSocket Port (optional)
#    volumes:
#      - ./mosquitto/config:/mosquitto/config
#      - ./mosquitto/data:/mosquitto/data
#      - ./mosquitto/log:/mosquitto/log

volumes:
  postgres_data: